{"version":3,"sources":["Context/AuthReducer.js","Context/AuthContext.js","Pages/Signin.js","Pages/Signup.js","Components/Message.js","Components/AddAmigo.js","Components/ProfilePage.js","Components/SidebarChat.js","Components/EmptyChatRoom.js","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AuthReducer","state","action","type","user","payload","isLoading","error","INITIAL_STATE","JSON","parse","localStorage","getItem","isFetching","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","Signin","useState","email","setEmail","password","setPassword","useContext","API_URL","process","console","log","loginCall","userCredential","a","axios","post","res","data","className","onSubmit","e","preventDefault","htmlFor","placeholder","name","required","onChange","target","minLength","disabled","CircularProgress","href","to","Signup","username","setUsername","photo","setPhoto","history","useHistory","handleForm","config","headers","FormData","append","push","accept","files","Message","message","own","text","format","createdAt","AddAmigo","addchattoggler","addchattoggle","amigousername","setAmigoUsername","handleSubmit","get","response","senderId","_id","receiverId","window","location","reload","onClick","src","alt","ProfilePage","toggler","togglestate","updated_data","put","result","SidebarChat","chatroomtile","currentUser","setUser","online","setOnline","socket","useRef","current","io","amigoId","members","find","m","on","users","userId","getAmigodetails","EmptyChatRoom","Home","chatroomtiles","setChatroomtiles","currentchat","setCurrentchat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","amigo","setAmigo","open","setOpen","scrollRef","sender","Date","now","includes","prev","emit","getChatroomtiles","getMessages","scrollIntoView","behavior","pick","setPick","sendingMessage","chatroomId","member","addtoggle","setAddtoggle","addchatToggler","profiletoggle","setProfiletoggle","profiletoggler","IconButton","style","fontSize","color","removeItem","map","ref","onSelect","emoji","native","emojiSize","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f7e5f49.chunk.js","sourcesContent":["const AuthReducer = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN_START\":\n            return {\n                user: action.payload,\n                isLoading: true,\n                error: false\n            };\n        case \"LOGIN_SUCCESS\":\n            return {\n                user: action.payload,\n                isLoading: false,\n                error: false\n            };\n        case \"LOGIN_FAILURE\":\n            return {\n                user: null,\n                isLoading: false,\n                error: action.payload\n            };\n\n        default:\n            return state\n    }\n}\n\nexport default AuthReducer;","import { createContext, useEffect, useReducer } from \"react\"\nimport AuthReducer from \"./AuthReducer\"\n\nconst INITIAL_STATE = {\n    user:JSON.parse(localStorage.getItem(\"user\")) || null,\n    isFetching:false,\n    error:false\n}\n\n/* Reads the data from the Provider and changes INITIAL_STATE */\nexport const AuthContext = createContext(INITIAL_STATE)\n\n/* Children here are the Components that need to get the data.[In this Application we specified App COmponent as Child in index.js so that we can server every every component exist in the app */\n/* This will provide data to all the children that we are giving here */\nexport const AuthContextProvider = ({children}) =>{\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n    useEffect(()=>{\n        localStorage.setItem(\"user\", JSON.stringify(state.user))\n      },[state.user])\n\n    return (\n        <AuthContext.Provider\n        value={{\n            user:state.user,\n            isFetching:state.isFetching,\n            error:state.error,\n            dispatch\n        }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}","import React, { useState, useContext } from 'react'\nimport './Signin.css'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { AuthContext } from '../Context/AuthContext'\n\nfunction Signin() {\n\n    const [email, setEmail] = useState()   /* Instead of Using useState hook we can use useRef and keep ref in the required input field for getting data */\n    const [password, setPassword] = useState()\n    const { isFetching, dispatch } = useContext(AuthContext)\n\n    const API_URL = process.env.REACT_APP_API_URL\n\n    console.log(API_URL)\n\n    const loginCall = async (userCredential, dispatch) => {\n        dispatch({ type: \"LOGIN_START\" });\n        try {\n            const res = await axios.post(API_URL+\"api/auth/signin\", userCredential);\n            dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\n        }\n        catch (err) {\n            dispatch({ type: \"LOGIN_FAILURE\", payload: err })\n        }\n    }\n\n    const handleForm = (e) => {\n        e.preventDefault()\n        loginCall({ email, password }, dispatch)\n    }\n\n    return (\n        <div className='signin-container'>\n            <div className=\"signin-card\">\n                <form onSubmit={handleForm}>\n                    <h2 className=\"signin-title\"> Log in</h2>\n                    <p className=\"line\"></p>\n                    <div className=\"signin-fields\">\n                        <label htmlFor=\"email\"> <b>Email</b></label>\n                        <input className='signin-textbox' type=\"email\" placeholder=\"Enter Email\" name=\"username\" required onChange={(e) => { setEmail(e.target.value) }} />\n                        <label htmlFor=\"password\"><b>Password</b></label>\n                        <input className='signin-textbox' type=\"password\" minLength='6' placeholder=\"Enter Password\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value) }} />\n                    </div>\n                    <button className=\"signin-button\" disabled={isFetching}>{isFetching ? <CircularProgress /> : \"Log In\"}</button>\n                    <a className=\"forget-pass\" href=\"#home\">Forgot password?</a>\n                </form>\n                <div className='signup-option'>\n                    <p className=\"signup-question\">Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signin","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Signup.css\";\n\nfunction Signup() {\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [username, setUsername] = useState();\n  const [photo, setPhoto] = useState(\"\");\n  const history = useHistory();\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  console.log(API_URL)\n\n  const handleForm = async (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    const data = new FormData();\n    data.append(\"username\", username);\n    data.append(\"email\", email);\n    data.append(\"password\", password);\n\n    if (photo !== \"\") {\n      data.append(\"photo\", photo);\n    }\n\n    try {\n      await axios.post(API_URL+\"api/auth/signup\", data, config);\n      history.push(\"/signin\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <div className=\"signup-card\">\n        <form onSubmit={handleForm}>\n          <h2 className=\"signup-title\"> Register </h2>\n          <p className=\"line\"></p>\n          <div className=\"signup-fields\">\n            <label htmlFor=\"username\"> {\" \"} <b>Username</b></label>\n            <input className=\"signup-textbox\" type=\"text\" placeholder=\"Enter Username\" name=\"username\" required onChange={(e) => { setUsername(e.target.value); }} />\n            <label htmlFor=\"email\">{\" \"}<b>Email</b></label>\n            <input className=\"signup-textbox\" type=\"email\" placeholder=\"Enter Email\" name=\"email\" required onChange={(e) => { setEmail(e.target.value); }} />\n            <label htmlFor=\"password\"> <b>Password</b></label>\n            <input className=\"signup-textbox\" type=\"password\" placeholder=\"Enter Password\" minLength=\"6\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value); }} />\n            <label><b>Image(You can add Image later)</b></label>\n            <input className=\"file-input\" type=\"file\" accept=\".png, .jpg, .jpeg, .gif\" name=\"photo\" onChange={(e) => { setPhoto(e.target.files[0]); }} />\n          </div>\n          <button className=\"signup-button\">Sign Up</button>\n        </form>\n        <div className=\"signup-option\">\n          <p className=\"signup-question\">\n            Have an account? <Link to=\"/signin\">Sign In</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react'\nimport './Message.css'\nimport { format } from \"timeago.js\"\n\nfunction Message({message,own}) {\n    return (\n        <div>\n            <p className={own?'message-sent':'message-received'}>\n                <span>{message.text}</span>\n                <span className='message-time'>{format(message.createdAt)}</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Message\n","import axios from 'axios';\nimport React, { useContext, useState } from 'react'\nimport { AuthContext } from '../Context/AuthContext';\nimport './AddAmigo.css'\n\nfunction AddAmigo({addchattoggler,addchattoggle}) {\n\n    const [amigousername, setAmigoUsername] = useState()\n    const { user } = useContext(AuthContext)\n\n    const API_URL = process.env.REACT_APP_API_URL\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await axios.get(`${API_URL}api/users/?username=${amigousername}`)\n            setAmigoUsername(\"\")\n            const data = {\n                senderId: user._id,\n                receiverId: response.data._id\n            }\n            await axios.post(API_URL+'api/chatrooms', data)\n        }\n        catch (err) {\n        }\n        window.location.reload();\n    }\n\n    return (\n        <div className='add-amigo-background'>\n            <div className={addchattoggle?\"add-amigo-open\":\"add-amigo-close\"}>\n                <div className=\"close-div\" ><span onClick={addchattoggler}><p className=\"close-symbol\">x</p></span></div>\n                <form>\n                    <img className='add-amigo-img' src='assets/addamigo.png' alt=''></img>\n                    <input type=\"text\" placeholder=\"Enter Username of Amigo\" value={amigousername} onChange={(e) => { setAmigoUsername(e.target.value) }} required />\n                    <button onClick={handleSubmit}>ADD AMIGO</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddAmigo\n","import React, { useContext, useState } from \"react\";\nimport \"./ProfilePage.css\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport axios from \"axios\";\n\nfunction ProfilePage({ toggler, togglestate }) {\n\n  const { user } = useContext(AuthContext);\n  const [username, setUsername] = useState(user.username)\n  const [photo, setPhoto] = useState(\"\")\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    const updated_data = new FormData();\n    updated_data.append(\"username\", username);\n    if (photo !== \"\") {\n      updated_data.append(\"photo\", photo);\n    }\n\n    try {\n      await axios.put(API_URL + 'api/users/' + user?._id, updated_data, config)\n      const result = await axios.get(API_URL+\"api/users/\"+user?._id)\n      const data = JSON.stringify(result.data)\n      localStorage.setItem(\"user\",data)\n    }\n    catch (err) {\n      console.log(err)\n    }\n    window.location.reload()\n  }\n\n  return (\n    <div className=\"profile\">\n      <div className={togglestate ? \"profile-card-open\" : \"profile-card-close\"}>\n        <div className=\"close-div\">\n          <span onClick={toggler}>\n            <p className=\"close-symbol\">x</p>\n          </span>\n        </div>\n        <img className=\"profile-image\" src={user?.photo ? API_URL+\"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt=\"\"></img>\n        <form>\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" className=\"username-input\" value={username} onChange={(e) => { setUsername(e.target.value) }} required></input>\n          <input\n            className=\"update-profilepic\"\n            type=\"file\"\n            accept=\".png, .jpg, .jpeg, .gif\"\n            name=\"photo\"\n            onChange={(e) => {\n              setPhoto(e.target.files[0]);\n            }}\n          />\n          <button onClick={handleSubmit}>UPDATE</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n","import React, { useEffect, useRef, useState } from 'react'\nimport './SidebarChat.css'\nimport axios from 'axios'\nimport { io } from \"socket.io-client\"\n\nfunction SidebarChat({ chatroomtile, currentUser }) {\n\n    const [user, setUser] = useState(null)\n    const [online, setOnline] = useState(false);\n    const socket = useRef()\n\n    const API_URL = process.env.REACT_APP_API_URL\n\n    useEffect(() => {\n        socket.current = io(API_URL);\n    }, [API_URL])\n\n    useEffect(() => {\n        const amigoId = chatroomtile.members.find((m) => m !== currentUser._id);\n        socket.current.on(\"getUsers\", (users) => {\n            setOnline(users.find((user) => user.userId === amigoId));\n        })\n        const getAmigodetails = async () => {\n            try {\n                const response = await axios.get(API_URL + 'api/users/' + amigoId)\n                setUser(response.data)\n            }\n            catch (err) {\n                console.log(err)\n            }\n        }\n        getAmigodetails()\n    }, [currentUser, chatroomtile, online, API_URL])\n\n    return (\n        <div className='sidebarchat'>\n            <img className='amigo-profilepic' src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt='' />\n            <div className={online ? \"online\" : \"offile\"}></div>\n            <p className=\"sidebarchat-info-name\">{user != null ? user.username : \"\"}</p>\n        </div>\n    )\n}\n\nexport default SidebarChat","import React from \"react\";\nimport \"./EmptyChatRoom.css\";\n\nfunction EmptyChatRoom() {\n  return (\n    <div>\n      <div className=\"EmptyChatroom\">\n        <img className=\"emptychatroom-img\"\n          src=\"assets/home.png\"\n          alt=\"\"\n        ></img>\n        <p className=\"empty-chatroom-mainhead\">Start Chatting with Your Amigo🤝</p>\n        <p className=\"empty-chatroom-subhead\">\n          Select an Amigo from the Sidebar and Start conversation.Add Amigos by\n          username from the option in the top right corner of the page\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default EmptyChatRoom;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport \"./HomeCSS/Home.css\";\nimport \"./HomeCSS/Sidebar.css\";\nimport \"./HomeCSS/ChatRoom.css\";\nimport Message from \"../Components/Message.js\";\nimport AddAmigo from \"../Components/AddAmigo.js\";\nimport ProfilePage from \"../Components/ProfilePage\";\nimport SidebarChat from \"../Components/SidebarChat.js\";\nimport EmptyChatRoom from \"../Components/EmptyChatRoom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { IconButton } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\n\nfunction Home() {\n  const [chatroomtiles, setChatroomtiles] = useState([]);\n  const [currentchat, setCurrentchat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [amigo, setAmigo] = useState();\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(AuthContext);\n  const scrollRef = useRef();\n  const socket = useRef();\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  /* Making Messages Realtime */\n\n  useEffect(() => {\n    socket.current = io(API_URL);\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n  }, [API_URL]);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentchat?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentchat]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user?._id);\n  }, [user, chatroomtiles, currentchat, socket]);\n\n  /* Fetching the Chat Tiles */\n\n  useEffect(() => {\n    const getChatroomtiles = async () => {\n      try {\n        const res = await axios.get(API_URL + \"api/chatrooms/\" + user._id);\n        setChatroomtiles(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getChatroomtiles();\n  }, [user?._id, API_URL]);\n\n  /* Fetching the Chat Tile user details */\n\n  useEffect(() => {\n    const amigoId = currentchat?.members.find((m) => m !== user._id);\n    const getAmigodetails = async () => {\n      try {\n        const response = await axios.get(API_URL + \"api/users/\" + amigoId);\n        setAmigo(response.data);\n      } catch (err) { }\n    };\n    getAmigodetails();\n  }, [user, currentchat, API_URL]);\n\n  /* Fetching ChatRoom Messages */\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const response = await axios.get(API_URL + \"api/messages/\" + currentchat?._id);\n        setMessages(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentchat, API_URL]);\n\n  /* Scroll to the recent message */\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  /* Emoji Picker */\n\n  const addEmoji = (e) => {\n    let emoji = e.native;\n    setNewMessage(newMessage + emoji);\n  };\n  const [pick, setPick] = useState(false);\n  const openPicker = () => {\n    setPick(!pick);\n  };\n\n  /* Posting a Message */\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const sendingMessage = {\n      chatroomId: currentchat._id,\n      senderId: user._id,\n      text: newMessage,\n    };\n\n    const receiverId = currentchat.members.find(\n      (member) => member !== user._id\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage,\n    });\n\n    try {\n      const response = await axios.post(API_URL + \"api/messages/\", sendingMessage);\n      setMessages([...messages, response.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n    setPick(false)\n  };\n\n  /* Logout */\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    window.location.reload();\n  };\n\n  /* AddChat Toggle Setup */\n\n  const [addtoggle, setAddtoggle] = useState(false);\n  const addchatToggler = () => {\n    addtoggle === false ? setAddtoggle(true) : setAddtoggle(false);\n    console.log(addtoggle);\n  };\n\n  /* Profile Page Toggle Setup */\n\n  const [profiletoggle, setProfiletoggle] = useState(false);\n  const profiletoggler = () => {\n    profiletoggle === false ? setProfiletoggle(true) : setProfiletoggle(false);\n  };\n\n  return (\n    <div className=\"home\">\n      {/* Chat Adding Card */}\n      <AddAmigo addchattoggler={() => { addchatToggler(); }} addchattoggle={addtoggle} />\n\n      {/* Profile Page Card - Update */}\n      <ProfilePage toggler={() => { profiletoggler(); }} togglestate={profiletoggle} />\n\n      {/* Sidebar Open Menu */}\n      {open\n        ? \"\"\n        : <div className=\"menu-open\" onClick={() => { setOpen(true); }} >\n          <IconButton>\n            <MenuIcon style={{ fontSize: 35, color: \"#316af3\" }} />\n          </IconButton>\n        </div>\n      }\n\n      {/* Add Chat Icon */}\n      <div className=\"add-chatroom-icon\" onClick={addchatToggler}>\n        <IconButton>\n          <PersonAddIcon />\n        </IconButton>\n      </div>\n\n      {/* Sidebar, ChatRoom */}\n      <div className=\"home-components\">\n\n        {/* Sidebar */}\n        <div className={open ? \"sidebar active\" : \"sidebar\"}>\n          <div className=\"sidebar-header\">\n            <div className=\"menu-close\" onClick={() => { setOpen(false); }} >\n              <IconButton>\n                <CloseIcon style={{ fontSize: 35, color: \"white\" }} />\n              </IconButton>\n            </div>\n            <IconButton onClick={() => { profiletoggler(); }} >\n              <img className=\"user-profile-image\" src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt='' />\n            </IconButton>\n            <div className=\"logout-option\">\n              <IconButton onClick={logout}>\n                <ExitToAppIcon />\n              </IconButton>\n            </div>\n          </div>\n          <div className=\"sidebar-search\">\n            <div className=\"sidebar-search-container\">\n              <SearchIcon className=\"sidebar-searchicon\" />\n              <input type=\"text\" name=\"chat-search\" placeholder=\"Search a Chat\" />\n            </div>\n          </div>\n\n          {/* Chatroom tiles */}\n\n          <div className=\"sidebar-chatoptions\">\n            {chatroomtiles.map((chatroomtile) => (\n              <div\n                key={chatroomtile?._id}\n                onClick={() => { setCurrentchat(chatroomtile); setOpen(false) }} >\n                <SidebarChat chatroomtile={chatroomtile} currentUser={user} />\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Chatroom */}\n        <div className=\"chatroom\">\n          {currentchat ? (\n            <>\n              <div className=\"chatroom-header\">\n                <div className=\"chatroom-chatinfo\">\n                  <img className='amigo-profilepic' src={amigo?.photo ? API_URL + \"photo/\" + amigo?.photo : \"assets/noavatar.jpg\"} alt='' />\n\n                  <div className=\"chatroom-chatinfo-right\">\n                    <div className=\"chatroom-chatinfo-name\">\n                      <p>{amigo?.username}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"chatroom-messages-container\" onClick={() => { setPick(false) }}>\n                {messages.map((message) => (\n                  <div key={message?._id} ref={scrollRef}>\n                    <Message message={message} own={message?.senderId === user._id} />\n                  </div>\n                ))}\n              </div>\n              <div className={pick ? \"emoji-picker-open\" : \"emoji-picker-close\"} >\n                <Picker onSelect={addEmoji} emojiSize={25} />\n              </div>\n              <div className=\"chatroom-footer\">\n                <div className=\"chatroom-footer-lefticons\">\n                  <IconButton onClick={openPicker}>\n                    <InsertEmoticonIcon />\n                  </IconButton>\n                  <IconButton>\n                    <AttachFileIcon />\n                  </IconButton>\n                </div>\n                <form>\n                  <input className=\"message-input\" type=\"text\" name=\"message-input\" placeholder=\"Type a message\" onChange={(e) => { setNewMessage(e.target.value); }} value={newMessage} required />\n                  <button className=\"input-button\" onClick={newMessage ? handleSubmit : null} > Send a Message </button>\n                </form>\n                <div className=\"chatroom-footer-righticon\" onClick={newMessage ? handleSubmit : null} >\n                  <IconButton>\n                    <SendIcon className=\"send-icon\" />\n                  </IconButton>\n                </div>\n              </div>\n            </>\n          ) : (\n            <EmptyChatRoom />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import Signin from \"./Pages/Signin.js\"\nimport Signup from \"./Pages/Signup.js\"\nimport Home from \"./Pages/Home.js\"\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport { useContext } from \"react\"\nimport { AuthContext } from \"./Context/AuthContext.js\"\n\nfunction App() {\n  \n  const { user } = useContext(AuthContext)\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            {user ? <Home /> : <Signin />}\n          </Route>\n          <Route exact path='/signin'>\n            {user ? <Redirect to='/' /> : <Signin />}\n          </Route>\n          <Route exact path='/signup'>\n            {user ? <Redirect to='/' /> : <Signup/>}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthContextProvider} from \"./Context/AuthContext\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}